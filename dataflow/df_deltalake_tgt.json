{
	"name": "df_deltalake_tgt",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_parq_out_file",
						"type": "DatasetReference"
					},
					"name": "readparq"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adls_gen2_01",
						"type": "LinkedServiceReference"
					},
					"name": "deltalakOutput"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          user_id as string,",
				"          email as string,",
				"          name as string,",
				"          given_name as string,",
				"          family_name as string,",
				"          nickname as string,",
				"          last_ip as string,",
				"          logins_count as long,",
				"          created_at as string,",
				"          updated_at as string,",
				"          last_login as string,",
				"          email_verified as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> readparq",
				"readparq derive(name = iifNull(name, 'vivek', '')) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'outputfiles',",
				"     folderPath: 'deltaLake',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> deltalakOutput"
			]
		}
	}
}